(* Generated by esgg output from fields/query.json based on fields/mapping.json *)
type 'key doc_count = { key: 'key; doc_count: int }
type 'a buckets = { buckets: 'a list }
type int_as_float =
  float wrap <ocaml t="int" wrap="int_of_float" unwrap="float_of_int">
type 'a value_agg' = { value: 'a }
type 'a value_agg =
  'a value_agg' wrap
    <ocaml
       t="'a" wrap="fun { value; } -> value" unwrap="fun value -> { value; }">
type basic_json <ocaml module="Json" t="t"> = abstract
type text = {
  ?en: string wrap <ocaml module="Content.Text.En"> nullable;
  ?fr: string wrap <ocaml module="Content.Text.Fr"> nullable
}
type content = { text: text }
type _source = {
  keyword: string wrap <ocaml module="Keyword">;
  content: content
}
type highlight = {
  ~keyword_search <json name="keyword.search">:
    string wrap <ocaml module="Keyword.Search"> list;
  ~content_text_en <json name="content.text.en">:
    string wrap <ocaml module="Content.Text.En"> list;
  ~content_text_fr <json name="content.text.fr">:
    string wrap <ocaml module="Content.Text.Fr"> list
}
type hit = { _id: string; _source: _source; ?highlight: highlight nullable }
type hits = { total: int; ~hits: hit list }
type result = { hits: hits }
