(* Generated by esgg from keywords/traffic-by-pages.query.json based on keywords/mapping.json *)
type 'key doc_count = { key: 'key; doc_count: int }
type 'a buckets = { buckets: 'a list }
type int_as_float =
  float wrap <ocaml t="int" wrap="int_of_float" unwrap="float_of_int">
type 'a value_agg' = { value: 'a }
type 'a value_agg =
  'a value_agg' wrap
    <ocaml
       t="'a" wrap="fun { value; } -> value" unwrap="fun value -> { value; }">
type basic_json <ocaml module="Json" t="json"> = abstract
type hits = { total: int }
type _source = {
  url: string wrap <ocaml module="Keywords.Serps.Positions.Url">
}
type hit = { _source: _source }
type hits1 = { total: int; ~hits: hit list }
type url = { hits: hits1 }
type totalKeywords = { doc_count: int; totalKeywords: int value_agg }
type trafficBy = {
  key:
    int <ocaml repr="int64"> wrap
      <ocaml module="Keywords.Serps.Positions.Url_hash.Rootdomain">;
  doc_count: int;
  traffic: float value_agg;
  url: url;
  totalKeywords: totalKeywords
}
type positions = {
  doc_count: int;
  trafficBy: trafficBy buckets;
  totalDomains: int value_agg;
  totalTraffic: float value_agg
}
type serps = { doc_count: int; positions: positions }
type aggregations = { serps: serps }
type result = { hits: hits; aggregations: aggregations }
