(* Generated by esgg from keywords/keywords.query.json based on keywords/mapping.json *)
type 'key doc_count = { key: 'key; doc_count: int }
type 'a buckets = { buckets: 'a list }
type t0 = { keyword_explorer: string; clickstream: string }
type t1 = {
  parent_keyword: string;
  parent_volume: float;
  parent_traffic: float;
  nice_parent_volume: int;
  nice_parent_traffic: int;
  volume: float;
  nice_volume: int;
  global_volume: float;
  nice_global_volume: int;
  provider: string;
  country: string;
  keyword: string;
  source_file: string;
  source_line: int;
  avg_volume: float;
  pred_volume: float;
  percent_clicks_organic: float;
  percent_clicks_paid: float;
  ctr_p_organic: float;
  return_rate: float;
  clicks_per_search: float;
  clicks_per_search_organic: float;
  clicks_per_search_paid: float;
  difficulty: int;
  first_seen: string;
  last_update: string;
  serp_last_update: string;
  serp_features: string;
  sources: t0;
  domains_names_organic: string;
  domains_names_paid: string;
  cpc: int;
  nice_cpc: int;
  user_id: int;
  dashboard_id: int
}
type t2 = { _id: string; _source: t1 }
type t3 = { total: int; ~hits: t2 list }
type value = { ?value: float nullable }
type totalVolume = { totalVolume: value }
type result = { hits: t3; aggregations: totalVolume }
