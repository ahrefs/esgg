(* Generated by esgg from serps/rt-overview-table.query.json based on serps/mapping.json *)
type 'key doc_count = { key: 'key; doc_count: int }
type 'a buckets = { buckets: 'a list }
type t0 = {
  exact: int <ocaml repr="int64">;
  exact_only: int <ocaml repr="int64">;
  prefix: int <ocaml repr="int64">;
  domain: int <ocaml repr="int64">;
  domain_only: int <ocaml repr="int64">;
  subdomains: int <ocaml repr="int64">;
  rootdomain: int <ocaml repr="int64">;
  site: int <ocaml repr="int64">
}
type t1 = { position: int; ordinal: int; block_pos: int; link_pos: int }
type t2 = {
  volume: float;
  nice_volume: int;
  cost: float;
  nice_cost: int;
  ctr_p: float;
  nr_pos: int
}
type t3 = {
  backlinks: int;
  refdomains: int;
  refclass_c: int;
  domain_rating: int;
  ahrefs_rank: int;
  ahrefs_top: int;
  gplus: int;
  facebook: int;
  linkedin: int;
  nr_keywords: int;
  traffic: float;
  top_keyword: string;
  top_keyword_id: string;
  top_volume: float;
  nice_top_volume: int
}
type t4 = {
  position: int;
  ordinal: int;
  block_pos: int;
  link_pos: int;
  type_ <json name="type">: string;
  url: string;
  url_hash: t0;
  url_visual: string;
  block: string;
  history: t1;
  title: string;
  title2: string;
  description: string;
  description2: string;
  rating: int;
  has_thumbnail: bool;
  video: string;
  prerender: string;
  company: string;
  features: string;
  stats: t2;
  metrics: t3
}
type t5 = {
  nr_int_url: int;
  nr_ext_url: int;
  recognized: float;
  real_country: string;
  bad_country: string;
  uul_text: string;
  real_uul_country: string;
  bad_uul_country: string
}
type t6 = {
  user_id: int;
  dashboard_id: int;
  keyword_id: int;
  provider: string;
  language: string;
  country: string;
  location: string;
  first_seen: string;
  last_update: string;
  next_update: string;
  prev_update: string;
  difficulty: int;
  parent_keyword: string;
  parent_volume: float;
  parent_traffic: float;
  nice_parent_volume: int;
  nice_parent_traffic: int;
  volume: float;
  nice_volume: int;
  global_volume: float;
  nice_global_volume: int;
  hash: int <ocaml repr="int64">;
  keyword: string;
  cpc: int;
  nice_cpc: int;
  competition: int;
  results: int;
  positions: t4;
  slot: int;
  version: int;
  deleted: bool;
  proxy_provider: string;
  proxy_ip: string;
  server: string;
  pos_suffix: string;
  last_rebuild: string;
  stats: t5
}
type t7 = { _id: string; found: bool; _source: t6 }
type result = { ~docs: t7 list }
