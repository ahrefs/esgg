(* Generated by esgg from positions/top-pages.query.json based on positions/mapping.json *)
type 'key doc_count = { key: 'key; doc_count: int }
type 'a buckets = { buckets: 'a list }
type history = {
  position: int wrap <ocaml module="Positions.History.Position">;
  ordinal: int wrap <ocaml module="Positions.History.Ordinal">;
  block_pos: int wrap <ocaml module="Positions.History.Block_pos">;
  link_pos: int wrap <ocaml module="Positions.History.Link_pos">
}
type stats = {
  volume: float wrap <ocaml module="Positions.Stats.Volume">;
  nice_volume: int wrap <ocaml module="Positions.Stats.Nice_volume">;
  cost: float wrap <ocaml module="Positions.Stats.Cost">;
  nice_cost: int wrap <ocaml module="Positions.Stats.Nice_cost">;
  ctr_p: float wrap <ocaml module="Positions.Stats.Ctr_p">;
  nr_pos: int wrap <ocaml module="Positions.Stats.Nr_pos">
}
type _source = {
  last_update: string wrap <ocaml module="Positions.Last_update">;
  prev_update: string wrap <ocaml module="Positions.Prev_update">;
  difficulty: int wrap <ocaml module="Positions.Difficulty">;
  nice_volume: int wrap <ocaml module="Positions.Nice_volume">;
  keyword: string wrap <ocaml module="Positions.Keyword">;
  nice_cpc: int wrap <ocaml module="Positions.Nice_cpc">;
  competition: int wrap <ocaml module="Positions.Competition">;
  results: int wrap <ocaml module="Positions.Results">;
  block_pos: int wrap <ocaml module="Positions.Block_pos">;
  type_ <json name="type">: string wrap <ocaml module="Positions.Type">;
  url: string wrap <ocaml module="Positions.Url">;
  history: history;
  has_thumbnail: bool wrap <ocaml module="Positions.Has_thumbnail">;
  video: string wrap <ocaml module="Positions.Video">;
  stats: stats;
  serp_features: string wrap <ocaml module="Positions.Serp_features">
}
type hit = { _id: string; _source: _source }
type hits = { total: int; ~hits: hit list }
type traffic = { ?value: float nullable }
type total = { total: int }
type top = { hits: total }
type have_rd = { doc_count: int; top2: top }
type topPages = {
  key:
    int <ocaml repr="int64"> wrap
      <ocaml module="Positions.Url_hash.Exact_only">;
  doc_count: int;
  traffic: traffic;
  traffic_value: traffic;
  top: top;
  have_rd: have_rd
}
type totalPages = { value: int }
type aggregations = {
  topPages: topPages buckets;
  totalPages: totalPages;
  totalTraffic: traffic
}
type result = { hits: hits; aggregations: aggregations }
